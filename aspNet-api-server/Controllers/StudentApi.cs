/*
 * API schema for research project
 *
 * API schema for research project
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class StudentApiController : ControllerBase
    { 
        /// <summary>
        /// Find first n students
        /// </summary>
        /// <remarks>Find and return first n students ordered by its IDs.</remarks>
        /// <param name="results">Number of students to return.</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Invalid &#39;results&#39; parameter value</response>
        /// <response code="401">unauthorized</response>
        [HttpGet]
        [Route("/student")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("StudentGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Student>), description: "successful operation")]
        public virtual IActionResult StudentGet([FromQuery (Name = "results")]int? results)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Student>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\r\n  \"nat\" : \"AU\",\r\n  \"gender\" : \"female\",\r\n  \"last_name\" : \"Lucas\",\r\n  \"registered\" : \"2014-07-23T03:21:42.259Z\",\r\n  \"title\" : \"Miss\",\r\n  \"id_name\" : \"TFN\",\r\n  \"picture\" : {\r\n    \"thumbnail\" : \"https://randomuser.me/api/portraits/thumb/men/75.jpg\",\r\n    \"large\" : \"https://randomuser.me/api/portraits/men/75.jpg\",\r\n    \"medium\" : \"https://randomuser.me/api/portraits/med/men/75.jpg\"\r\n  },\r\n  \"phone\" : \"03-2662-3559\",\r\n  \"dob\" : \"1964-11-23T00:00:00.000+00:00\",\r\n  \"location\" : {\r\n    \"country\" : \"Australia\",\r\n    \"city\" : \"Tamworth\",\r\n    \"timezone\" : \"330\",\r\n    \"street_number\" : 2595,\r\n    \"postcode\" : \"6066\",\r\n    \"state\" : \"Queensland\",\r\n    \"street_name\" : \"Main Street\"\r\n  },\r\n  \"id\" : 1,\r\n  \"first_name\" : \"Terri\",\r\n  \"email\" : \"terri.lucas@example.com\",\r\n  \"id_value\" : \"230000682\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Student>>(exampleJson)
            : default(List<Student>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add a new students
        /// </summary>
        /// <remarks>Add a new students</remarks>
        /// <param name="student">Create a new students</param>
        /// <response code="201">Created successfully</response>
        /// <response code="400">Invalid input</response>
        /// <response code="401">unauthorized</response>
        /// <response code="422">Validation exception</response>
        [HttpPost]
        [Route("/student")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("StudentPost")]
        [SwaggerResponse(statusCode: 201, type: typeof(List<Student>), description: "Created successfully")]
        [SwaggerResponse(statusCode: 422, type: typeof(List<ErrorMessage>), description: "Validation exception")]
        public virtual IActionResult StudentPost([FromBody]List<Student> student)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(List<Student>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(List<ErrorMessage>));
            string exampleJson = null;
            exampleJson = "{\r\n  \"nat\" : \"AU\",\r\n  \"gender\" : \"female\",\r\n  \"last_name\" : \"Lucas\",\r\n  \"registered\" : \"2014-07-23T03:21:42.259Z\",\r\n  \"title\" : \"Miss\",\r\n  \"id_name\" : \"TFN\",\r\n  \"picture\" : {\r\n    \"thumbnail\" : \"https://randomuser.me/api/portraits/thumb/men/75.jpg\",\r\n    \"large\" : \"https://randomuser.me/api/portraits/men/75.jpg\",\r\n    \"medium\" : \"https://randomuser.me/api/portraits/med/men/75.jpg\"\r\n  },\r\n  \"phone\" : \"03-2662-3559\",\r\n  \"dob\" : \"1964-11-23T00:00:00.000+00:00\",\r\n  \"location\" : {\r\n    \"country\" : \"Australia\",\r\n    \"city\" : \"Tamworth\",\r\n    \"timezone\" : \"330\",\r\n    \"street_number\" : 2595,\r\n    \"postcode\" : \"6066\",\r\n    \"state\" : \"Queensland\",\r\n    \"street_name\" : \"Main Street\"\r\n  },\r\n  \"id\" : 1,\r\n  \"first_name\" : \"Terri\",\r\n  \"email\" : \"terri.lucas@example.com\",\r\n  \"id_value\" : \"230000682\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Student>>(exampleJson)
            : default(List<Student>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete student by ID
        /// </summary>
        /// <remarks>Delete student by given ID.</remarks>
        /// <param name="studentId">ID of the student to delete</param>
        /// <response code="204">Deleted successfully</response>
        /// <response code="401">unauthorized</response>
        /// <response code="404">Student not found</response>
        [HttpDelete]
        [Route("/student/{studentId}")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("StudentStudentIdDelete")]
        public virtual IActionResult StudentStudentIdDelete([FromRoute (Name = "studentId")][Required]int studentId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Update some fields of student
        /// </summary>
        /// <remarks>Update some fields of student by given student ID.</remarks>
        /// <param name="studentId">ID of the student to update</param>
        /// <param name="student">Update existing student</param>
        /// <response code="200">Updated successfully</response>
        /// <response code="400">Invalid input</response>
        /// <response code="401">unauthorized</response>
        /// <response code="404">Student not found</response>
        /// <response code="422">Validation exception</response>
        [HttpPatch]
        [Route("/student/{studentId}")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("StudentStudentIdPatch")]
        [SwaggerResponse(statusCode: 200, type: typeof(Student), description: "Updated successfully")]
        [SwaggerResponse(statusCode: 422, type: typeof(List<ErrorMessage>), description: "Validation exception")]
        public virtual IActionResult StudentStudentIdPatch([FromRoute (Name = "studentId")][Required]int studentId, [FromBody]Student student)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Student));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(List<ErrorMessage>));
            string exampleJson = null;
            exampleJson = "{\r\n  \"nat\" : \"AU\",\r\n  \"gender\" : \"female\",\r\n  \"last_name\" : \"Lucas\",\r\n  \"registered\" : \"2014-07-23T03:21:42.259Z\",\r\n  \"title\" : \"Miss\",\r\n  \"id_name\" : \"TFN\",\r\n  \"picture\" : {\r\n    \"thumbnail\" : \"https://randomuser.me/api/portraits/thumb/men/75.jpg\",\r\n    \"large\" : \"https://randomuser.me/api/portraits/men/75.jpg\",\r\n    \"medium\" : \"https://randomuser.me/api/portraits/med/men/75.jpg\"\r\n  },\r\n  \"phone\" : \"03-2662-3559\",\r\n  \"dob\" : \"1964-11-23T00:00:00.000+00:00\",\r\n  \"location\" : {\r\n    \"country\" : \"Australia\",\r\n    \"city\" : \"Tamworth\",\r\n    \"timezone\" : \"330\",\r\n    \"street_number\" : 2595,\r\n    \"postcode\" : \"6066\",\r\n    \"state\" : \"Queensland\",\r\n    \"street_name\" : \"Main Street\"\r\n  },\r\n  \"id\" : 1,\r\n  \"first_name\" : \"Terri\",\r\n  \"email\" : \"terri.lucas@example.com\",\r\n  \"id_value\" : \"230000682\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Student>(exampleJson)
            : default(Student);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update student
        /// </summary>
        /// <remarks>Update student by given ID.</remarks>
        /// <param name="studentId">ID of the student to update</param>
        /// <param name="student">Update existing student</param>
        /// <response code="200">Updated successfully</response>
        /// <response code="400">Invalid input</response>
        /// <response code="401">unauthorized</response>
        /// <response code="404">Student not found</response>
        /// <response code="422">Validation exception</response>
        [HttpPut]
        [Route("/student/{studentId}")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("StudentStudentIdPut")]
        [SwaggerResponse(statusCode: 200, type: typeof(Student), description: "Updated successfully")]
        [SwaggerResponse(statusCode: 422, type: typeof(List<ErrorMessage>), description: "Validation exception")]
        public virtual IActionResult StudentStudentIdPut([FromRoute (Name = "studentId")][Required]int studentId, [FromBody]Student student)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Student));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(List<ErrorMessage>));
            string exampleJson = null;
            exampleJson = "{\r\n  \"nat\" : \"AU\",\r\n  \"gender\" : \"female\",\r\n  \"last_name\" : \"Lucas\",\r\n  \"registered\" : \"2014-07-23T03:21:42.259Z\",\r\n  \"title\" : \"Miss\",\r\n  \"id_name\" : \"TFN\",\r\n  \"picture\" : {\r\n    \"thumbnail\" : \"https://randomuser.me/api/portraits/thumb/men/75.jpg\",\r\n    \"large\" : \"https://randomuser.me/api/portraits/men/75.jpg\",\r\n    \"medium\" : \"https://randomuser.me/api/portraits/med/men/75.jpg\"\r\n  },\r\n  \"phone\" : \"03-2662-3559\",\r\n  \"dob\" : \"1964-11-23T00:00:00.000+00:00\",\r\n  \"location\" : {\r\n    \"country\" : \"Australia\",\r\n    \"city\" : \"Tamworth\",\r\n    \"timezone\" : \"330\",\r\n    \"street_number\" : 2595,\r\n    \"postcode\" : \"6066\",\r\n    \"state\" : \"Queensland\",\r\n    \"street_name\" : \"Main Street\"\r\n  },\r\n  \"id\" : 1,\r\n  \"first_name\" : \"Terri\",\r\n  \"email\" : \"terri.lucas@example.com\",\r\n  \"id_value\" : \"230000682\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Student>(exampleJson)
            : default(Student);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
