/*
 * API schema for research project
 *
 * API schema for research project
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using AspNetApiServer.Attributes;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using AspNetApiServer.Models;

namespace AspNetApiServer.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class GeneralApiController : ControllerBase
    { 
        /// <summary>
        /// Get authorization JWT token
        /// </summary>
        /// <remarks>Returns JWT token for further authorization.</remarks>
        /// <response code="200">successful operation</response>
        /// <response code="401">unauthorized</response>
        [HttpPost]
        [Route("/authorize")]
        [ValidateModelState]
        [SwaggerOperation("AuthorizePost")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "successful operation")]
        public virtual IActionResult AuthorizePost()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Returns \&quot;Hello World!\&quot; phrase
        /// </summary>
        /// <remarks>Returns \&quot;Hello World!\&quot; phrase.</remarks>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/hello")]
        [ValidateModelState]
        [SwaggerOperation("HelloGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "successful operation")]
        public virtual IActionResult HelloGet()
        {
            return StatusCode(200, "Hello World!");
        }
    }
}
